#!/bin/bash

TARGET_MHS=10000
PORT=4028
HOST="localhost"
VERBOSE=0

# parse commandline
OPTIND=1
while getopts ":vh:p:t:" opt; do
	case "$opt" in
		h)  HOST="$OPTARG"
		    ;;
		p)  PORT="$OPTARG"
		    ;;
		t)  TARGET_MHS="$OPTARG"
		    ;;
		v)  VERBOSE=1
		    ;;
		\?) printf "Error: Invalid option -$OPTARG\nOptions:\n q - quiet\n h - host (def localhost)\n p - port (def 4028)\n t - target mhs (def 10000)\n v - verbose\n\n"
		    exit 2
		    ;;
	esac
done

if [ $VERBOSE -eq 1 ]; then
	echo "Host: $HOST:$PORT"
	echo "Target MHS: $TARGET_MHS"
	echo "Output pin: $PIN"
fi


# query miner
RESULT=`echo "summary|" | nc -w 5 "$HOST" "$PORT"`

# parse response
HAS_STATUS=0
MHS=0
while read -r -d '|' LINE; do
	while read -r -d ',' ITEM; do
		IFS='=' read -r -a VALUES <<< "$ITEM"
		if [ "$ITEM" = 'STATUS=S' ]; then
			HAS_STATUS=1
		fi
		if [ "${VALUES[0]}" = "MHS av" ]; then
			MHS=`printf "%.0f" "${VALUES[1]}"`
		fi
	done <<< "$LINE"
done <<< "$RESULT"

# test for alert
if [ '(' "$MHS" -gt " $TARGET_MHS" ')' -a '(' "$HAS_STATUS" -eq 1 ')' ]; then
	ALERT=0
else
	ALERT=1
fi

# print output
if [ $VERBOSE -eq 1 ]; then
	echo "Status: $HAS_STATUS"
	echo "Mhs: $MHS"
	echo "Alert: $ALERT"
fi

# return exit status
exit $ALERT
